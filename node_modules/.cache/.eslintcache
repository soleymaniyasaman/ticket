[{"/Users/yasaman/Documents/first_example/src/index.js":"1","/Users/yasaman/Documents/first_example/src/App.js":"2","/Users/yasaman/Documents/first_example/src/reportWebVitals.js":"3","/Users/yasaman/Documents/first_example/src/pages/ticketing/index.js":"4","/Users/yasaman/Documents/first_example/src/context/auth-context.js":"5","/Users/yasaman/Documents/first_example/src/navigation/CONSTANS.js":"6","/Users/yasaman/Documents/first_example/src/components/popUp/index.js":"7","/Users/yasaman/Documents/first_example/src/components/utils/down_collapse.js":"8","/Users/yasaman/Documents/first_example/src/components/utils/utils.js":"9","/Users/yasaman/Documents/first_example/src/components/pagination/index.js":"10","/Users/yasaman/Documents/first_example/src/components/hisory-layout/index.js":"11"},{"size":535,"mtime":1653403143873,"results":"12","hashOfConfig":"13"},{"size":264,"mtime":1653404091064,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1653403143874,"results":"15","hashOfConfig":"13"},{"size":21126,"mtime":1653410521450,"results":"16","hashOfConfig":"13"},{"size":7703,"mtime":1653409127123,"results":"17","hashOfConfig":"13"},{"size":1989,"mtime":1653403844049,"results":"18","hashOfConfig":"13"},{"size":2626,"mtime":1653407247654,"results":"19","hashOfConfig":"13"},{"size":390,"mtime":1653407490946,"results":"20","hashOfConfig":"13"},{"size":2646,"mtime":1653409169352,"results":"21","hashOfConfig":"13"},{"size":2873,"mtime":1653405565936,"results":"22","hashOfConfig":"13"},{"size":1891,"mtime":1653408217391,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"yyo33u",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"27"},"/Users/yasaman/Documents/first_example/src/index.js",[],[],[],"/Users/yasaman/Documents/first_example/src/App.js",["63"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Ticketing from './pages/ticketing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Ticketing />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yasaman/Documents/first_example/src/reportWebVitals.js",[],[],"/Users/yasaman/Documents/first_example/src/pages/ticketing/index.js",["64","65","66"],[],"import React, { useContext, useEffect, useState } from 'react'\n\nimport { Form, Table } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom';\n\n// import { ADDTICKETING } from '../../navigation/CONSTANS';\n\nimport HistoryLayout from '../../components/hisory-layout';\n\nimport { AuthContext } from '../../context/auth-context';\n\nimport add from '../../assets/vector/auth/Group1841.svg';\n\nimport check from '../../assets/vector/check_circle-24px.svg';\n\nimport notCheck from '../../assets/vector/not_check_circle-24px.svg';\n\nimport profilePic from \"../../assets/vector/profilepicture.svg\";\n\nimport dot from '../../assets/vector/dot.svg';\n\n// import { BASE_URL, IAM_APP } from '../../../utils/constants';\n\n// import ProfileInfo from '../../../services/profile';\n\nimport PopUp from '../../components/popUp';\n\nimport { timeToStr } from '../../components/utils/utils';\n\n// import IsMobile from '../../../components/is-mobile-responsive';\n\nimport Down from '../../components/utils/down_collapse';\n\n// import service from '../../../services/service';\n\nimport PaginationComponent from '../../components/pagination';\n\nimport cancel from '../../assets/vector/cancel-24px.svg'\n\nexport default function Ticketing() {\n\n    const authContext = useContext(AuthContext);\n\n    // const [filterValue, setFilterValue] = useState()\n\n    const [ticketId, setTicketId] = useState();\n\n    const [currentPage, setcurrentPage] = useState(0);\n\n    const [dataLength, setDataLength] = useState();\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [ticketItem, setTicketItem] = useState({\n        body: \"hi\",\n        created_at: \"2021-12-08T15:50:13.150098+03:30\",\n        id: 56,\n        is_read: true,\n        media_id: 1,\n        updated_at: null\n    })\n\n    const [ticketReplyItem, setTicketReplyItem] = useState([{\n        admin_reply: true,\n        body: \"yep\",\n        category: null,\n        created_at: \"2021-12-07T08:37:57.167751+03:30\",\n        id: 46,\n        is_read: true,\n        media_id: null,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: null,\n        user: {\n            Group: null,\n            credentials: { created_at: null, updated_at: null, first_name: 'یاسمن', last_name: 'سلیمانی' },\n            id: 6\n        }\n    }, {\n        admin_reply: true,\n        body: \"nope\",\n        category: null,\n        created_at: \"2021-12-07T09:06:04.149402+03:30\",\n        id: 47,\n        is_read: true,\n        media_id: 1,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: null,\n        user: {\n            Group: null,\n            credentials: { created_at: null, updated_at: null, first_name: 'یاسمن', last_name: 'سلیمانی' },\n            id: 6\n        }\n    }, {\n        admin_reply: true,\n        body: \"string\",\n        category: null,\n        created_at: \"2021-12-07T10:23:18.400000+03:30\",\n        id: 48,\n        is_read: true,\n        media_id: 0,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: \"2021-12-07T10:23:42.440291+03:30\",\n        user: {\n            Group: null,\n            credentials: { created_at: '2021-10-26T10:57:48.429350+03:30', updated_at: null, first_name: 'اشکان', last_name: null },\n            id: 8\n        }\n    }])\n\n    const [text, setText] = useState();\n\n    const [onCloseTicket, setOnCloseTicket] = useState(false);\n\n\n\n    //responsive: open drawer state\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    let a = {\n        items: [\n            {\n                admin_reply: false,\n                body: \"hi\",\n                category: { created_at: null, updated_at: null, title: \"test\", id: 1 },\n                created_at: \"2021-12-08T15:50:13.150098+03:30\",\n                id: 56,\n                is_read: true,\n                media_id: 1,\n                priority: \"high\",\n                state: \"open\",\n                title: \"ttteeeeesssstttt\",\n                updated_at: null,\n                user: {\n                    Group: null,\n                    credentials: { created_at: null, updated_at: null, first_name: \"یاسمن\", last_name: \"سلیمانی\" },\n                    id: 6\n                }\n            }\n        ],\n        total: 1\n    }\n    let b = {\n        body: \"hi\",\n        created_at: \"2021-12-08T15:50:13.150098+03:30\",\n        id: 56,\n        is_read: true,\n        media_id: 1,\n        updated_at: null\n    }\n\n    let c = [{\n        admin_reply: true,\n        body: \"yep\",\n        category: null,\n        created_at: \"2021-12-07T08:37:57.167751+03:30\",\n        id: 46,\n        is_read: true,\n        media_id: null,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: null,\n        user: {\n            Group: null,\n            credentials: { created_at: null, updated_at: null, first_name: 'یاسمن', last_name: 'سلیمانی' },\n            id: 6\n        }\n    }, {\n        admin_reply: true,\n        body: \"nope\",\n        category: null,\n        created_at: \"2021-12-07T09:06:04.149402+03:30\",\n        id: 47,\n        is_read: true,\n        media_id: 1,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: null,\n        user: {\n            Group: null,\n            credentials: { created_at: null, updated_at: null, first_name: 'یاسمن', last_name: 'سلیمانی' },\n            id: 6\n        }\n    }, {\n        admin_reply: true,\n        body: \"string\",\n        category: null,\n        created_at: \"2021-12-07T10:23:18.400000+03:30\",\n        id: 48,\n        is_read: true,\n        media_id: 0,\n        priority: \"low\",\n        state: \"open\",\n        title: null,\n        updated_at: \"2021-12-07T10:23:42.440291+03:30\",\n        user: {\n            Group: null,\n            credentials: { created_at: '2021-10-26T10:57:48.429350+03:30', updated_at: null, first_name: 'اشکان', last_name: null },\n            id: 8\n        }\n    }]\n    // for mobile size toggle the table\n    // get list of tickets\n\n    const ticketList = () => {\n\n        // const ticketUrl = `${BASE_URL(IAM_APP)}/ticketing/?${currentPage ? `&page=${currentPage}` : \"\"}&size=10`\n\n        authContext.setTicketList(a.items)\n\n        setDataLength(a.total)\n        // service.get_api(ticketUrl)\n\n        //     .then(resp => {\n\n\n        //     })\n\n    }\n\n    //close ticket\n\n    const closeTicket = () => {\n\n        if (ticketId) {\n            setOnCloseTicket(true)\n\n            setModalOpen(false)\n\n            // const closeTicketUrl = `${BASE_URL(IAM_APP)}/ticketing/${ticketId}/close/`\n\n            // service.get_api(closeTicketUrl)\n\n            //     .then(resp => {\n\n\n            //     })\n\n            //     .finally(() => setModalOpen(false))\n\n        }\n\n    }\n\n\n\n    useEffect(() => {\n\n        ticketList()\n\n    }, [currentPage, onCloseTicket]);\n\n\n\n\n\n    const filter = <>\n\n    </>;\n\n\n\n    // get ticket's info who click on \n\n    const ticketItems = () => {\n\n        // if (ticketId) {\n        setTicketItem(b)\n\n        // const myTicketUrl = `${BASE_URL(IAM_APP)}/ticketing/${ticketId}/`\n\n        // service.get_api(myTicketUrl)\n\n        //     .then(resp => {\n\n\n        //     })\n\n        // }\n\n    }\n    console.log(\"ticket\", authContext.ticketList);\n    //get replys of ticket who click on\n\n    const replyItems = () => {\n\n        if (ticketId) {\n\n            setTicketReplyItem(c)\n            // const myTicketUrl = `${BASE_URL(IAM_APP)}/ticketing/${ticketId}/reply/`\n\n            // service.get_api(myTicketUrl)\n\n            //     .then(resp => {\n\n\n            //     })\n\n        }\n\n    }\n\n\n\n    //post reply text\n\n    const ReplyTicket = () => {\n\n        setModalOpen(false)\n        // const replyTicketUrl = `${BASE_URL(IAM_APP)}/ticketing/${ticketId}/reply/`\n\n        // let payload = {\n\n        //     \"body\": text,\n\n        // }\n\n        // service.post_api(replyTicketUrl, payload = payload)\n\n        //     .then(resp => {\n\n\n        //     })\n\n    }\n\n    useEffect(() => {\n\n        ticketItems()\n\n        replyItems()\n\n    }, [ticketId, modalOpen]);\n\n\n\n\n\n    //popup detail\n\n    const popUpBody = <div className=\" p-3\">\n\n        {ticketItem ?\n\n            <div dir=\"rtl\" className=\"align-items-start d-flex p-3\">\n\n                <div>\n\n                    <div className=\"align-items-start d-flex\">\n\n                        <img alt=\"\" src={profilePic} className=\"pl-2\" />\n\n                        <p className=\"m-0\">{'نامعلوم'}</p>\n\n                    </div>\n\n                    <p className=\"m-0 mt-n1\">{timeToStr(ticketItem.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}</p>\n\n                    <div className=\"input-group-text rounded-3\">\n\n                        <p className=\"m-1\">\n\n                            {ticketItem.body}\n\n                        </p>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            : null}\n\n        {ticketReplyItem ?\n\n            ticketReplyItem.map((item, index) => {\n\n                return (\n\n                    <>\n\n                        {/* {item.user.id === authContext.profileInfo.id ? */}\n\n                        <div dir=\"rtl\" className=\"align-items-start d-flex p-3\">\n\n                            <div>\n\n                                <div className=\"align-items-start d-flex\">\n\n                                    <img alt=\"\" src={profilePic} className=\"pl-2\" />\n\n                                    <p className=\"m-0\">{'نامعلوم'}</p>\n\n                                </div>\n\n                                <p className=\"m-0 mt-n1\">{timeToStr(item.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}</p>\n\n                                <div className=\"input-group-text rounded-3\">\n\n                                    <p className=\"m-1\">\n\n                                        {item.body}\n\n                                    </p>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        {/* :\n\n                            <div dir=\"ltr\" className=\"align-items-start d-flex p-3\">\n\n                                <div>\n\n                                    <div dir=\"rtl\" className=\"align-items-start d-flex\">\n\n                                        <img alt=\"\" src={profilePic} className=\"pl-2\" />\n\n                                        <p className=\"m-0\">ادمین</p>\n\n                                    </div>\n\n                                    <p className=\"m-0 mt-n1 text-start\">{timeToStr(item.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}</p>\n\n                                    <div className=\"input-group-text rounded-3 text-white\" style={{ backgroundColor: '#181C1F' }}>\n\n                                        <p className=\"m-1\">\n\n                                            {item.body}\n\n                                        </p>\n\n                                    </div>\n\n                                </div>\n\n                            </div>} */}\n\n                    </>\n\n                )\n\n            })\n\n            :\n\n            null\n\n        }\n\n        <hr />\n\n        <div className=\"align-items-start justify-content-end d-flex p-3\">\n\n            <Form className=\"w-100\">\n\n                <Form.Group dir=\"rtl\" className=\"d-flex mb-3 \" controlId=\"exampleForm.ControlTextarea1\">\n\n                    <Form.Label className=\"form-label ml-2\" style={{ whiteSpace: 'nowrap' }}>ارسال تیکت</Form.Label>\n\n                    <Form.Text as=\"textarea\" rows={3} className=\"input-group-text text-right rounded-2 w-100\" onChange={e => setText(e.target.value)} />\n\n                </Form.Group>\n\n            </Form>\n\n        </div>\n\n    </div>\n\n\n\n    const body = <>\n\n        {/* <ProfileInfo /> */}\n\n        {/* <IsMobile /> */}\n\n        <div className=\"d-flex justify-content-end ml-0 mb-4\">\n\n            {/* <Link to={ADDTICKETING}> */}\n\n            <button id=\"btn-add-cart\" className=\"bg-light btn rounded-pill text-success py-1 ml-0\">ثبت تیکت جدید<img alt=\"\" src={add} className=\"ml-2 h-75 mr-2\" /></button>\n\n            {/* </Link> */}\n\n        </div>\n\n        {modalOpen ?\n\n            <PopUp\n\n                show={modalOpen}\n\n                onHide={() => setModalOpen(false)}\n\n                size=\"lg\"\n\n                popUpHead={\"مشاهده پیام\"}\n\n                popUpBody={popUpBody}\n\n                headerStyle=\"justify-content-between\"\n\n                onClose={closeTicket}\n\n                onCloseText={'آیا از بستن تیکت مطمئن هستید؟ بعد از بسته شدن تیکت امکان پاسخ مجدد وجود ندارد'}\n\n                onAccept={() => {\n\n                    return (\n\n                        ReplyTicket(text)\n\n                    )\n\n                }\n\n                }\n\n                onAcceptText={'ارسال تیکت'}\n\n            /> : null\n\n        }\n\n        {authContext.isMobile ?\n\n            <>\n\n                <PaginationComponent total={dataLength} data={authContext.ticketList ? authContext.ticketList : null} itemsPerPage={10} currentPage={currentPage} setcurrentPage={setcurrentPage}>\n\n                    {authContext.ticketList?.length ?\n\n                        authContext.ticketList.map((item, index) => {\n\n                            return <Table responsive=\"sm\" >\n\n                                <tbody>\n\n                                    <tr>\n\n                                        <td>عنوان تیکت </td>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n\n                                            {!item.is_read ? <img alt=\"\" src={dot} /> : null}\n\n                                            {item.title}\n\n                                        </td>\n\n                                    </tr>\n\n                                    <tr>\n\n                                        <td>زمان ارسال</td>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n\n                                            {timeToStr(item.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}\n\n                                        </td>\n\n                                    </tr>\n\n                                    <tr >\n\n                                        <td>وضعیت</td>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n                                            {item.state === \"open\" ?\n\n                                                item.admin_reply === \"true\" ?\n\n                                                    <>\n\n                                                        <img alt=\"\" src={check} />\n\n                                                        پاسخ داده شده\n\n                                                    </> :\n\n                                                    <>\n\n                                                        <img alt=\"\" src={notCheck} />\n\n                                                        در انتظار پاسخ\n\n                                                    </>\n\n                                                :\n\n                                                item.state === \"close\" ?\n                                                    <>\n\n                                                        <img alt=\"\" src={cancel} />\n\n                                                        بسته شده\n\n                                                    </>\n                                                    :\n                                                    null\n\n                                            }\n\n                                        </td>\n\n                                    </tr>\n\n                                    <tr class={`collapse ticket-collapse${index}`} id={`multiCollapseTicket${index}`}>\n\n                                        <td colSpan=\"2\" >\n\n                                            <Link className=\"btn btn-purple w-50\" onClick={() => {\n\n                                                setTicketId(item.id);\n\n                                                setModalOpen(true)\n\n                                            }}>جزئیات</Link>\n\n                                        </td>\n\n                                    </tr>\n\n                                    <tr\n\n                                        data-toggle=\"collapse\"\n\n                                        data-target={`.ticket-collapse${index}`}\n\n                                        aria-controls={`multiCollapseTicket${index}`}\n\n                                    >\n\n                                        <td colSpan={2}>\n\n                                            <button className=\"btn d-flex justify-content-center text-white w-100\" onClick={() => setIsOpen(!isOpen)}>\n\n                                                بیشتر <Down isOpen={isOpen} />\n\n                                            </button>\n\n                                        </td>\n\n                                    </tr>\n\n                                </tbody>\n\n                            </Table>\n\n                        }) : null}\n\n                </PaginationComponent>\n\n            </>\n\n            :\n\n            <PaginationComponent total={dataLength} data={authContext.ticketList ? authContext.ticketList : null} itemsPerPage={10} currentPage={currentPage} setcurrentPage={setcurrentPage}>\n\n                <Table responsive=\"sm\" className=\"tableTicket\" >\n\n                    <thead>\n\n                        <tr>\n\n                            <th>عنوان تیکت </th>\n\n                            <th>زمان ارسال  </th>\n\n                            <th>وضعیت</th>\n\n                            <th>جزییات</th>\n\n                        </tr>\n\n                    </thead>\n\n                    <tbody>\n\n                        {authContext.ticketList?.length ?\n\n                            authContext.ticketList.map((item, index) => {\n\n                                return (\n\n                                    <tr>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n\n                                            {!item.is_read ? <img alt=\"\" src={dot} /> : null}\n\n                                            {item.title}\n\n                                        </td>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n\n                                            {timeToStr(item.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}\n\n                                        </td>\n\n                                        <td className={item.is_read ? 'text-muted' : null}>\n                                            {item.state === \"open\" ?\n\n                                                item.admin_reply === true ?\n\n                                                    <>\n\n                                                        <img alt=\"\" src={check} className='ml-1' />\n\n                                                        پاسخ داده شده\n\n                                                    </> :\n\n                                                    <>\n\n                                                        <img alt=\"\" src={notCheck} className='ml-1' />\n\n                                                        در حال بررسی\n\n                                                    </>\n\n                                                :\n\n                                                item.state === \"close\" ?\n                                                    <>\n\n                                                        <img alt=\"\" src={cancel} className='ml-1' />\n\n                                                        بسته شده\n\n                                                    </>\n                                                    :\n                                                    null\n\n                                            }\n\n                                        </td>\n\n                                        <td>\n\n                                            <Link className=\"btn btn-purple w-50\" onClick={() => {\n\n                                                setTicketId(item.id);\n\n                                                setModalOpen(true)\n\n                                            }}>جزئیات</Link>\n\n                                        </td>\n\n                                    </tr>\n\n                                )\n\n                            }) : <tr>\n\n                                <td colSpan={4}>\n\n                                    تیکتی ثبت نشده است\n\n                                </td>\n\n                            </tr>\n\n                        }\n\n                    </tbody>\n\n                </Table>\n\n            </PaginationComponent>\n\n        }\n\n    </>;\n\n\n\n    return (\n\n        <HistoryLayout\n\n            title=\"تیکت ها\"\n\n            panelTitle=\"تیکت ها\"\n\n            // filter={filter}\n\n            body={body}\n\n        />\n\n    )\n\n}\n\n","/Users/yasaman/Documents/first_example/src/context/auth-context.js",[],[],"/Users/yasaman/Documents/first_example/src/navigation/CONSTANS.js",[],[],"/Users/yasaman/Documents/first_example/src/components/popUp/index.js",["67"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { Popconfirm, Button } from 'antd';\n\nimport { React } from 'react';\n\n// import { Button } from 'react-bootstrap';\n\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { faArrowLeft, faCaretLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport lock from '../../assets/vector/lock.svg'\n\nimport './popUp.scss'\n\n\n\nconst PopUp = (props) => {\n\n  return (\n\n    <Modal size={props.size} show={props.show} onHide={props.onHide} className=\"mt-5 pt-5\">\n\n      <Modal.Header className={`popUpHeader ${props.headerStyle}`} closeLabel=\"\">\n\n        {props.onClose ?\n\n          <div className=\"d-flex\" >\n\n            <p className=\"text-success mr-3\" role=\"button\" onClick={props.onHide}>\n\n              <FontAwesomeIcon icon={faArrowLeft} className=\"mr-1\" />\n\n              بازگشت به لیست تیکت‌‌ها\n\n            </p>\n\n            <Popconfirm\n\n              placement=\"bottom\"\n\n              title={props.onCloseText}\n\n              onConfirm={props.onClose}\n\n              okText=\"تایید\"\n\n              cancelText=\"لغو\"\n\n            >\n              <Button className=\"ant-btn border-0 btn btn-danger text-white popUpButtonDeny\">\n\n                بستن تیکت\n\n                <img src={lock} className=\"h-50 ml-1\" />\n\n              </Button>\n\n            </Popconfirm>\n\n            {/* <Button onClick={props.onClose} className=\"bg-transparent btn btn-danger2 popUpButtonDeny\">\n\n            {props.onCloseText}\n\n          </Button> */}\n\n          </div>\n\n          : null\n\n        }\n\n        <Modal.Title className=\"small\">\n\n          <div className=\" d-flex align-items-center w-auto mx-auto flex-row-reverse\">\n\n            {/* <img src=\"/assests/drawer/Polygon.svg\" /> */}\n            <span>\n\n              <FontAwesomeIcon className='fs-4 ms-2' style={{ color: '#7E94FF' }} icon={faCaretLeft} />\n\n            </span>\n\n            <p className=\"me-1 m-0 text-white\"> {props.popUpHead} </p>\n\n          </div>\n\n        </Modal.Title>\n\n      </Modal.Header>\n\n      <Modal.Body className=\"popUpBody\">{props.popUpBody}</Modal.Body>\n\n      <Modal.Footer className=\"popUpFooter\">\n\n        {props.onCancel ?\n\n          <Button onClick={props.onCancel} className=\"bg-transparent btn btn-danger2 popUpButtonDeny\">\n\n            {props.onCancelText}\n\n          </Button>\n\n          : null\n        }\n\n        {props.onAcceptText ?\n\n          <Button onClick={props.onAccept} className=\"popUpBody popUpButton \">\n\n            {props.onAcceptText}\n\n          </Button> : null}\n\n      </Modal.Footer>\n\n    </Modal>\n\n  )\n\n}\n\n\n\nexport default PopUp;\n","/Users/yasaman/Documents/first_example/src/components/utils/down_collapse.js",[],[],"/Users/yasaman/Documents/first_example/src/components/utils/utils.js",[],[],"/Users/yasaman/Documents/first_example/src/components/pagination/index.js",["68","69","70","71","72"],[],"import { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport React, { useState } from \"react\";\n\nimport \"./pagination.scss\";\n\n\n\nfunction PaginationComponent(props) {\n\n  //   const [currentPage, setcurrentPage] = useState(1);\n\n  const [pageNumberLimit, setpageNumberLimit] = useState(3);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(3);\n\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(-1);\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.total / props.itemsPerPage); i++) {\n\n    pages.push(i);\n    \n  }\n  \n  // console.log(\"dta\",props.children)\n\n  const handleClick = (event) => {\n\n    props.setcurrentPage(Number(event.target.id));\n\n  };\n\n\n\n  const renderPageNumbers = pages.map((number) => {\n\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n\n      return (\n\n        <li\n\n          key={number}\n\n          id={number}\n\n          onClick={handleClick}\n\n          className={props.currentPage == number ? \"active\" : null}\n\n        >\n\n          {number}\n\n        </li>\n\n      );\n\n    } else {\n\n      return null\n\n    }\n\n  });\n\n\n\n  const handleNextbtn = () => {\n\n    props.setcurrentPage(props.currentPage + 1);\n\n\n\n    if (props.currentPage + 1 > maxPageNumberLimit) {\n\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n\n    }\n\n  };\n\n\n\n  const handlePrevbtn = () => {\n\n    props.setcurrentPage(props.currentPage - 1);\n\n\n\n    if ((props.currentPage - 1) % pageNumberLimit == 0) {\n\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n\n    }\n\n  };\n\n\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n\n  }\n\n\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n\n  }\n\n\n\n\n\n  return (\n\n    <>\n\n      {props.children}\n\n      <ul className=\"pageNumbers\" style={{ display: props.display }}>\n\n        <li>\n\n          <button\n\n            onClick={handlePrevbtn}\n\n            disabled={props.currentPage == pages[0] ? true : false}\n\n          >\n\n            <FontAwesomeIcon icon={faAngleRight} color=\"#7E94FF\" />\n\n          </button>\n\n        </li>\n\n        {pageDecrementBtn}\n\n        {renderPageNumbers}\n\n        {pageIncrementBtn}\n\n        <li>\n\n          <button\n\n            onClick={handleNextbtn}\n\n            disabled={props.currentPage == pages[pages.length - 1] ? true : false}\n\n          >\n\n            <FontAwesomeIcon icon={faAngleLeft} color=\"#7E94FF\" />\n\n          </button>\n\n        </li>\n\n      </ul>\n\n\n\n    </>\n\n  );\n\n}\n\n\n\nexport default PaginationComponent;\n","/Users/yasaman/Documents/first_example/src/components/hisory-layout/index.js",["73","74"],[],"import React, { useContext } from 'react'\n\nimport { Col, Container, Row } from 'react-bootstrap'\n\nimport { useRouteMatch } from 'react-router-dom'\n\n// import Panel from '../../../../components/shared/panel'\n\nimport { AuthContext } from '../../context/auth-context'\n\n// import { DASHBOARD, TICKETING } from '../../navigation/CONSTANS'\n\nimport './history-layout.scss'\n\n\n\nexport default function HistoryLayout(props) {\n\n    const authContext = useContext(AuthContext);\n\n    // let matchDashboardOrder = useRouteMatch(DASHBOARD);\n\n    // let matchTicket = useRouteMatch(TICKETING);\n\n\n\n    return (\n\n        <div id=\"histoy__section\" style={{ marginTop: \"70px\" }}>\n\n            {props.popUp}\n\n            <Container style={{ maxWidth: \"97%\" }}>\n\n                <Row>\n\n                    <p className=\"fa-1x\">{props.title}</p>\n\n                </Row>\n\n                <Row>\n\n                    {/* <Panel title={props.panelTitle} className={props.className} className_container={props.className_container}> */}\n\n                    <div id=\"histoy__section-filter\" className={\"mr-auto d-flex row justify-content-between\"}>\n\n\n\n                        <Col sm={12} className=\"d-inline-flex\">\n\n                            {props.filterMarket}\n\n                            {props.filter}\n\n                            {props.filterQoin}\n\n                            {props.filterDepositKind}\n\n                            {props.filterOrder}\n\n                            {props.filterKind}\n\n                            {props.filterStatus}\n\n                            {props.filterScore}\n\n                        </Col>\n\n\n\n                    </div>\n\n                    <div className=\"h-100\" style={{ height: '' }}>\n\n                        {props.body}\n\n                    </div>\n\n                    {/* </Panel> */}\n\n                </Row>\n\n            </Container>\n\n        </div>\n\n    )\n\n}\n\n",{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":260,"column":8,"nodeType":"81","endLine":260,"endColumn":36,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":266,"column":11,"nodeType":"77","messageId":"78","endLine":266,"endColumn":17},{"ruleId":"79","severity":1,"message":"84","line":342,"column":8,"nodeType":"81","endLine":342,"endColumn":29,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":56,"column":17,"nodeType":"88","endLine":56,"endColumn":57},{"ruleId":"75","severity":1,"message":"89","line":15,"column":27,"nodeType":"77","messageId":"78","endLine":15,"endColumn":45},{"ruleId":"90","severity":1,"message":"91","line":53,"column":40,"nodeType":"92","messageId":"93","endLine":53,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":97,"column":51,"nodeType":"92","messageId":"93","endLine":97,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":145,"column":41,"nodeType":"92","messageId":"93","endLine":145,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":167,"column":41,"nodeType":"92","messageId":"93","endLine":167,"endColumn":43},{"ruleId":"75","severity":1,"message":"94","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":23},{"ruleId":"75","severity":1,"message":"95","line":19,"column":11,"nodeType":"77","messageId":"78","endLine":19,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ticketList'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'filter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'replyItems' and 'ticketItems'. Either include them or remove the dependency array.",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setpageNumberLimit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRouteMatch' is defined but never used.","'authContext' is assigned a value but never used.",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [currentPage, onCloseTicket, ticketList]",{"range":"102","text":"103"},"Update the dependencies array to be: [ticketId, modalOpen, ticketItems, replyItems]",{"range":"104","text":"105"},[6755,6783],"[currentPage, onCloseTicket, ticketList]",[7980,8001],"[ticketId, modalOpen, ticketItems, replyItems]"]